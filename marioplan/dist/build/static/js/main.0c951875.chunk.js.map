{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","store/actions/projectActions.js","components/projects/CreateProject.js","App.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","React","Component","compose","console","log","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","res","doc","set","createProject","authorId","add","Date","CreateProject","history","push","App","exact","path","component","ProjectDetails","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attatchAuthIsReady","authIsReady","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0c951875.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { signOut } from '../../store/actions/authActions.js';\r\nimport { connect } from 'react-redux';\r\n\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n     <ul className = 'right'>\r\n        <li><NavLink to = '/create'>New Project</NavLink></li>\r\n        <li><a onClick = {props.signOut}>Log Out</a></li>\r\n        <li><NavLink to = '/' className = 'btn btn-floating pink lighten-1'>{props.profile.initials}</NavLink></li>\r\n     </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks); //remember null since no statetoprops here","//action creator for signing in\r\n\r\nexport const signIn = (creds) => {\r\n    return(dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        //firebase auth service to sign in with email and pw\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            creds.email,\r\n            creds.password\r\n        )\r\n        .then(() => {\r\n            dispatch ({ type: 'LOGIN_SUCCESS' });\r\n        })\r\n        .catch((err) => {\r\n            dispatch ({ type: 'LOGIN_ERROR', err });\r\n        })\r\n    }\r\n}\r\n\r\n//action creator for sign out\r\nexport const signOut = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch ({ type: 'SIGNOUT_SUCCESS' });\r\n        });\r\n\r\n    }\r\n}\r\n\r\n//action creator for sign up\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        )\r\n        .then(res => {\r\n            return firestore.collection('users').doc(res.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            }); //creating a new doc with the id generated by firebase\r\n        }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS' });\r\n        })\r\n        .catch( err => {\r\n            dispatch({ type: 'SIGNUP-ERROR' });\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n     <ul className = 'right'>\r\n        <li><NavLink to = '/signup'>Sign Up</NavLink></li>\r\n        <li><NavLink to = '/signin'>Login</NavLink></li>\r\n     </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks.js';\r\nimport SignedOutLinks from './SignedOutLinks.js';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Navbar = (props) => {\r\n  const { auth, profile } = props; //make sure to destructure this\r\n  const links = auth.uid ? <SignedInLinks profile = {profile} /> : <SignedOutLinks /> //auth.uid only exists if user is signed in. If it does exist, store the <signedinlinks /> component in links. If it doesn't, store signedoutlinks\r\n    return (\r\n      <nav className = 'nav-wrapper grey darken-3'> \r\n        <div className = 'container'>\r\n            <Link to = '/' className = 'brand-logo'>MarioPlan</Link>\r\n            { links }\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst Notifications = (props) => {\r\n    const { notifications } = props;\r\n    return(\r\n        <div className = 'section'>\r\n        <div className = 'card z-depth-0'>\r\n        \r\n            <div className = 'card-content'>\r\n                <span className = 'card-title'>Notifications</span>\r\n                <ul className = 'notifications'>\r\n                    {\r\n                        notifications && notifications.map(item => {\r\n                            return (\r\n                                <li key = {item.id} >\r\n                                    <span className = 'pink-text'>{item.user} </span>\r\n                                    <span>{item.content}</span>\r\n                                    <div className = 'grey-text note-date'>\r\n                                        {moment(item.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })\r\n                    }\r\n                </ul>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications;","import React from 'react';\r\nimport moment from 'moment';\r\n\r\n// could destructor props like {projects}\r\nconst ProjectSummary = (props) => {\r\n    return (\r\n        <div className = 'card z-depth-0 project-summary'>\r\n                <div className = 'card-content grey-text text-darken-3'>\r\n                    <span className = 'card-title'>{props.project.title}</span>\r\n                    <p>Posted by {props.project.authorFirstName} {props.project.authorLastName}</p>\r\n                    <p className = 'grey-text'>{moment(props.project.createdAt.toDate()).calendar()}</p>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary;","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary.js';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ProjectList = ({ projects }) => {\r\n    return (\r\n        <div className = 'project-list section'>\r\n           {\r\n               //if we have projects, do something if not, don't bother\r\n               projects && projects.map(project => {\r\n                   return(\r\n                    <Link to = {'/project/' + project.id} key = {project.id}> \r\n                    <ProjectSummary \r\n                        project = {project}\r\n                    />\r\n                    </Link>\r\n                   )\r\n               })\r\n           }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList;","import React from 'react';\r\nimport Notifications from './Notifications.js';\r\nimport ProjectList from '../projects/ProjectList.js';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase'; //HOC that tells firestore which collection you want to connect to\r\nimport { compose } from 'redux'; //used to combine 2 HOC's\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Dashboard extends React.Component{\r\n    render(){\r\n        // console.log(this.props);\r\n        const { projects, auth, notifications } = this.props;\r\n        if (!auth.uid) return <Redirect to ='/signin' /> //if they aren't logged in, redirect them to sign in page\r\n        return(\r\n            <div className = 'dashboard container'>\r\n                <div className = 'row'>\r\n                    <div className = 'col s12 m6'>\r\n                    <ProjectList projects = {projects} />\r\n                        <div className = 'col s12 m5 offset-m1'>\r\n                            <Notifications\r\n                                notifications = {notifications}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    console.log(state);\r\n    return {\r\n        projects: state.firestore.ordered.projects, // loads in projects data from firestore db\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications //array of notifications, attatching it to props \r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([                                                      //order by time, desc order\r\n        { collection: 'projects', orderBy: ['createdAt', 'desc'] }, {collection: 'notifications', limit: 3, orderBy: ['time', 'desc']} //*ok, when this compoonent is active the collection i want to listen to is the project collection. if the project collection changes, this compononet will hear about that and update with current info. limit notifications to 3\r\n    ])\r\n)(Dashboard);\r\n\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\n\r\nconst ProjectDetails = (props) => {\r\n    const { project, auth } = props; //this makes it so you don't have to do props.project.title ect \r\n    if (!auth.uid) return <Redirect to ='/signin' /> //if they aren't logged in, redirect them to sign in page\r\n\r\n    if (project) {\r\n        return (\r\n            <div className = 'container section project-details'>\r\n                <div className = 'card z-depth-0'>\r\n                    <div className = 'card-content'>\r\n                        <span className = 'card-title'>{ project.title }</span>\r\n                        <p>{project.content}</p>\r\n                    </div>\r\n                    <div className = 'card-action grey lighten-4 grey-text'>\r\n                        <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n                        <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return(\r\n            <div className = 'container center'>\r\n                <p>Loading Project...</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id; //stores the id of the specific project\r\n    const projects = state.firestore.data.projects; //stores the list of projects from firestore insot const projects\r\n    const project = projects ? projects[id] : null //stores the result of proejcts with the id of stored id into const project\r\n    return {\r\n        project: project, \r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects' }\r\n    ])\r\n)(ProjectDetails)\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signIn } from '../../store/actions/authActions.js'; //action creator for signIn\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    }\r\n    render() {\r\n        const { authError, auth } = this.props;\r\n        if (auth.uid) return <Redirect to ='/' /> //if they aren't logged in, redirect them to sign in page\r\n        return (\r\n            <div className = 'container'>\r\n                <form onSubmit = {this.handleSubmit} className = 'white'>\r\n                    <h5 className = 'grey-text text-darken-3'>Sign In</h5>\r\n                    <div className = 'input-field'>\r\n                        <label htmlFor = 'email'>Email</label>\r\n                        <input type = 'email' id = 'email' onChange = {this.handleChange} />\r\n                    </div>\r\n                    <div className = 'input-field'>\r\n                    <label htmlFor = 'password'>password</label>\r\n                    <input type = 'password' id = 'password' onChange = {this.handleChange} />\r\n                </div>\r\n                <div className = 'input-field'>\r\n                    <button className = 'btn pink lighten-1 z-depth-0'>Sign In</button>\r\n                    <div className = 'red-text center'>\r\n                        { authError ? <p>{authError}</p> : null }\r\n                    </div>\r\n                </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError, //get state, auth holds the auth reducer, inside that the property is called authError\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn) \r\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signUp } from '../../store/actions/authActions.js';\r\n\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state); //takes action signUp and passes it the state, which is teh newUser info\r\n        \r\n    }\r\n    render() {\r\n        const { auth, authError } = this.props;\r\n        if (auth.uid) return <Redirect to ='/' /> //if they are logged in, shouldn't be seeing sign up page\r\n\r\n        return (\r\n            <div className = 'container'>\r\n                <form onSubmit = {this.handleSubmit} className = 'white'>\r\n                    <h5 className = 'grey-text text-darken-3'>Sign Up</h5>\r\n                    <div className = 'input-field'>\r\n                        <label htmlFor = 'email'>Email</label>\r\n                        <input type = 'email' id = 'email' onChange = {this.handleChange} />\r\n                    </div>\r\n                    <div className = 'input-field'>\r\n                    <label htmlFor = 'password'>Password</label>\r\n                    <input type = 'password' id = 'password' onChange = {this.handleChange} />\r\n                </div>\r\n                <div className = 'input-field'>\r\n                    <label htmlFor = 'lastName'>Last Name</label>\r\n                    <input type = 'text' id = 'lastName' onChange = {this.handleChange} />\r\n                </div>\r\n                <div className = 'input-field'>\r\n                     <label htmlFor = 'firstName'>First Name</label>\r\n                        <input type = 'text' id = 'firstName' onChange = {this.handleChange} />\r\n                </div>\r\n                <div className = 'input-field'>\r\n                    <button className = 'btn pink lighten-1 z-depth-0'>Sign Up</button>\r\n                    <div className = 'red-text center'>\r\n                        {authError ? <p>{ authError}</p> : null}\r\n                    </div>\r\n                </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","\r\n\r\nexport const createProject = (project) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        //make asyc calls to db, here is wehre you can add it to db before dispatch finishes \r\n        const firestore = getFirestore(); //reference to our firestore db\r\n        const profile = getState().firebase.profile; //grabs the profile info from state\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection('projects').add({\r\n            ...project, //spread in the project that we got from state from the createproject.js\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }) //this returns a promise\r\n        .then(() => {\r\n            dispatch({ type: 'CREATE_PROJECT', project }); //project: project same thing\r\n        })\r\n        .catch((err) => {\r\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err });\r\n        })\r\n        \r\n    }\r\n};","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { createProject } from '../../store/actions/projectActions.js';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n      title: '',\r\n      content: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // console.log(this.state);\r\n        this.props.createProject(this.state); // will pass state into createProject and dispatch it, run the function in projectActions with the data in state\r\n        this.props.history.push('/');\r\n    }\r\n    render() {\r\n        const { auth } = this.props;\r\n        if(!auth.uid) return <Redirect to = '/signin' />\r\n        return (\r\n            <div className = 'container'>\r\n                <form onSubmit = {this.handleSubmit} className = 'white'>\r\n                    <h5 className = 'grey-text text-darken-3'>Create Project</h5>\r\n                    <div className = 'input-field'>\r\n                        <label htmlFor = 'title'>Title</label>\r\n                        <input type = 'text' id = 'title' onChange = {this.handleChange} />\r\n                    </div>\r\n                    <div className = 'input-field'>\r\n                    <label htmlFor = 'content'>Project Content</label>\r\n                    <textarea  id = 'content'  className = 'materialize-textarea' onChange = {this.handleChange} ></textarea>\r\n                </div>\r\n                <div className = 'input-field'>\r\n                    <button className = 'btn pink lighten-1 z-depth-0'>Create</button>\r\n                </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth //mapping the auth from state to props here\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project)) //add createProject to props. props.createProject takes in a project param and dispatches the createProject(project) action\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject) //the first param of connect should be mapStateToProps, since we don't have that, we can use null. But must have that first param filled in\r\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar.js';\nimport Dashboard from './components/dashboard/Dashboard.js';\nimport ProjectDetails from './components/projects/ProjectDetails.js';\nimport SignIn from './components/auth/SignIn.js';\nimport SignUp from './components/auth/SignUp.js';\nimport CreateProject from './components/projects/CreateProject.js';\n\n//<Switch> makes sure that only one route is loaded up at a time\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n      <Navbar />\n      <Switch>\n        <Route exact path = '/' component = {Dashboard} />\n        <Route path = '/project/:id' component = {ProjectDetails} />\n        <Route path = '/signin' component = {SignIn} />\n        <Route path = '/signup' component = {SignUp} />\n        <Route path = '/create' component = {CreateProject} />\n      </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n                console.log('login_error');\r\n            return {\r\n                ...state,\r\n                authError: 'Login Failed'\r\n            }\r\n        case 'LOGIN_SUCCESS' :\r\n            console.log('login_success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS' :\r\n            console.log('signout_success');\r\n            return state;\r\n        case 'SIGNUP_SUCCESS' :\r\n            console.log('signup succuss')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR' :\r\n            console.log('signup error')\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n    \r\n}\r\n\r\nexport default authReducer;","const initState = {\r\n    projects: [\r\n        {id: '1', title: 'Courage need not be remembered', content: 'Kill Gannon'},\r\n        {id: '2', title: 'Spartans Never die', content: 'They just go MIA'},\r\n        {id: '3', title: 'This is Amazing', content: 'How to get gold medals'},\r\n        {id: '4', title: 'Uldren Sov', content: 'is mine'}\r\n    ]\r\n}\r\nconst projectReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_PROJECT':\r\n            console.log('created project', action.project);\r\n            return state;\r\n        case 'CREATE_PROJECT_FAIL':\r\n            console.log('create project error:', action.err) //err passed in from action\r\n            return state;\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default projectReducer;","import authReducer from './authReducer.js';\r\nimport projectReducer from './projectReducer.js';\r\nimport { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore'; //premade reducer made to sync firestore data with state, already passed in fbConfig in index.js\r\nimport { firebaseReducer } from 'react-redux-firebase'; \r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer, //will auto sync this property on the db \r\n    firebase: firebaseReducer //sync auth status on firebase with redux on state has properties isEmpty: true, isLoaded: ture, authError: null\r\n})\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app'; //basic features \r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n\r\n  // Your web app's Firebase configuration\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyAD6yJm4D_ZpHiRuJpT3rh20Q8aqMl6LBU\",\r\n    authDomain: \"firstfirestoreproject-57f73.firebaseapp.com\",\r\n    databaseURL: \"https://firstfirestoreproject-57f73.firebaseio.com\",\r\n    projectId: \"firstfirestoreproject-57f73\",\r\n    storageBucket: \"\",\r\n    messagingSenderId: \"487291895227\",\r\n    appId: \"1:487291895227:web:0d5139773b1c879a\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.firestore().settings({ timestampsInSnapshots: true }); //timestamps default to true now, but you need at least one arg for this to compile \r\n\r\n  export default firebase;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer.js';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase, authIsReady } from 'react-redux-firebase'; //allows access to firebase/firestore api\nimport fbConfig from './config/fbConfig.js';\n\n\n// const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; //using firefox redux devtools\nconst store = createStore(rootReducer, \n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n        reduxFirestore(fbConfig), //pass in the firebase config\n        reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users', attatchAuthIsReady: true}) //allows access to authisready, adds profile info to firebase state from users. state.firebase.profile will hold 'users' collection info\n        )\n    ); \n\nauthIsReady(store).then(() => {\n        ReactDOM.render(<Provider store = {store} ><App /></Provider>, document.getElementById('root'));\n    })\n\n    //this waits on auth stuff before rending everything, so you don't get a flicker of icons on nav-bar\n"],"sourceRoot":""}